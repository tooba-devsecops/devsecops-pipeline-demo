name: DevSecOps CI Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-secure:
    runs-on: ubuntu-latest

    steps:
      # 1. Récupération du code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Setup Python + cache pip
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt

      # 3. Installation des dépendances + outils sécu
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit safety

      # 4. SAST (analyse statique avec Bandit)
      - name: Run Bandit (SAST)
        run: |
          bandit -r app.py -q

      # 5. SCA (analyse des dépendances avec Safety)
      - name: Run Safety (SCA)
        run: |
          safety check -r requirements.txt --full-report

      # 6. Scan d’image Docker avec Trivy
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@v0
        with:
          image-ref: 'docker.io/library/python:3.11-slim'
          format: 'table'
          exit-code: '1'            # échoue si vulnérabilités
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      # 7. IaC Scan (Terraform avec Checkov)
      - name: Scan Terraform with Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ./terraform
          framework: terraform
          quiet: true
          soft_fail: false          # échoue si findings
